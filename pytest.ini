[pytest]
# Minimum required pytest version for this configuration
# Ensures compatibility with the specified features
minversion = 7.0

cache_dir=.cache/pytest
# Additional command-line options to always include
# Sets default behavior for test runs
addopts =
    # Show detailed test progress and results
    # Improves visibility of test execution
    ; --verbose
    # Show local variables in tracebacks
    # Helps with debugging failed tests
    --showlocals
    ; ; # Tracks code coverage during test execution
    ; --cov=src/imgtools
    ; ; # Output coverage report in terminal
    ; ; # Provides immediate feedback on coverage
    ; --cov-report=term-missing

    ; # Generate XML coverage report
    ; # Creates detailed coverage report for upload to code coverage services
    ; --cov-report=xml:coverage-report/coverage.xml

    # Point to coverage config file
    # Allows customization of coverage report generation
    ; --cov-config=config/coverage.toml
    # xdist_group
    # sends tests to the same worker if they are in the same group
    ; --dist=loadgroup
    ; ; # xdist numprocesses
    ; --numprocesses=auto
    ; --maxprocesses=12

    # Junit params
    # XML path
    --junitxml=.cache/test-results/junit.xml

    --rootdir=.

    # if you want to debug: run pytest with --pdb
    # Specify a custom interactive Python debugger for use with --pdb.
    --pdbcls=IPython.terminal.debugger:TerminalPdb

; log_cli = true
; log_cli_level = INFO

asyncio_mode = auto
asyncio_default_fixture_loop_scope = session 

# Markers for categorizing tests
# Allows running specific test categories
markers =
    ; slow: marks tests as slow (deselect with '-m "not slow"')
    integration: more complex tests, may require external resources, and use multiple modules 
    unittests: marks quick unit tests that do not load any data
    e2e: full tests, including cli entry points

# Files to ignore during test collection
# Excludes specified files from testing
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__

# Test filename patterns
# Defines patterns for test file discovery
python_files = test_*.py *_test.py *_tests.py

# Configure console output style
# Sets the format of test result output
console_output_style = progress

# Ignore warnings
# Suppresses warnings during test execution
filterwarnings =
    ignore::DeprecationWarning
    # Add specific warning messages to ignore here
    ignore::UserWarning:pydicom.*

# JUnit XML report
# Junit is a widely used XML format for test reports
junit_suite_name = imgtools
