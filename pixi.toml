[project]
authors = ["Jermiah Joseph <jermiahjoseph98@gmail.com>"]
channels = ["conda-forge"]
description = "Add a short description here"
name = "med-imagetools"
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]


[dependencies]
python = "3.12.*"
pip = ">=24.3.1,<25"


[pypi-dependencies]
med-imagetools = { path = ".", editable = true}

[environments]
dev = ["test", "quality", "build", "dev", "docs"]
docs = ["docs"]
test = ["test", "quality"]
py310 = { features = ["py310", "test"], no-default-feature = true }
py311 = { features = ["py311", "test"], no-default-feature = true }
py312 = { features = ["py312", "test"], no-default-feature = true }

############################################## DEV ###############################################
[feature.dev.pypi-dependencies]
med-imagetools = { path = ".", editable = true, extras = ["all"]}

[feature.dev.dependencies]
ipython = "*"
ipykernel = "*"
jupyterlab = "*"

[feature.dev.activation.env]
IMGTOOLS_LOG_LEVEL = "DEBUG"

[feature.dev.tasks]
clean = {	cmd = [
		"bash",
		"-c",
		"rm -rf .cache && find . -type f -name '.coverage*' -exec rm -f {} +"
	],	description = "Clear cache and coverage files"}

############################################## PYTHON ###############################################

[feature.py310.dependencies]
python = "3.10.*"
[feature.py311.dependencies]
python = "3.11.*"
[feature.py312.dependencies]
python = "3.12.*"

############################################## TEST ################################################
[feature.test.pypi-dependencies]
med-imagetools = { path = ".", editable = true, extras = ["test"]}

[feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"
pytest-mock = ">=3.14.0,<4"
sqlalchemy-stubs = ">=0.4,<0.5"
filelock = ">=3.17.0,<4"

[feature.test.tasks.test]
cmd = "pytest -c config/pytest.ini --rootdir . --basetemp='./tests/temp'"
description = "Run pytest (make sure to run in root directory)"

[feature.test.tasks.test_ci]
cmd = "pytest -c config/pytest.ini --rootdir ."

[feature.test.tasks.coverage]
cmd = "coverage report --rcfile=config/coverage.toml"
inputs = ["coverage-report/coverage.xml", "config/coverage.toml"]
depends-on = ["test"]
description = "Run pytest and generate coverage report"

[feature.test.tasks.clean_tests]
cmd = "rm -rf .pytest_cache data tests/temp temp_outputs .cache"
############################################## DOCS ###############################################
[feature.docs.dependencies]
mkdocs = "*"
mkdocs-material = ">=9.5.44,<10"
mkdocstrings = ">=0.27.0,<0.28"
mkdocstrings-python = ">=1.12.2,<2"
mkdocs-git-authors-plugin = ">=0.9.0,<0.10"
mkdocs-git-revision-date-localized-plugin = ">=1.2.9,<2"
griffe-inherited-docstrings = ">=1.1.1,<2"
mike = ">=2.1.2,<3"
mkdocs-include-markdown-plugin = ">=7.1.1,<8"
mkdocs-click = ">=0.6.0,<0.7"
black = ">=24.10.0,<25"

[feature.docs.pypi-dependencies]
mkdocs-awesome-pages-plugin = ">=2.9.3, <3"

[feature.docs.tasks]
doc-build.description = "Build the documentation using MkDocs"
doc-build.cmd = "mkdocs build -f mkdocs.yml"
doc-build.inputs = ["docs", "mkdocs.yml"]
doc-build.outputs = ["site"]

serve.description = "Serve the documentation to http://localhost:8000/"
serve.cmd = "mkdocs serve -f mkdocs.yml"


############################################## QUALITY ###############################################
# Quality includes linting, type checking, and formatting
[feature.quality.dependencies]
ruff = ">=0.4.8"
mypy = ">=1.13.0,<2"
types-pytz = ">=2024.2.0.20241003,<2025"
types-tqdm = ">=4.66.0.20240417,<5"
pandas-stubs = ">=2.2.3.241126,<3"

[feature.quality.pypi-dependencies]
pydoctest = ">=0.2.1, <0.3"

[feature.quality.tasks]
ruff-check.cmd = ["ruff", "--config", "config/ruff.toml", "check", "src"]
ruff-check.inputs = ["config/ruff.toml", "src"]
ruff-check.description = "Run ruff check"

ruff-format.cmd = ["ruff", "--config", "config/ruff.toml", "format", "src"]
ruff-format.inputs = ["config/ruff.toml", "src"]
ruff-format.description = "Run ruff format, run check first"

type-check.cmd = ["mypy", "--config-file", "config/mypy.ini", "src"]
type-check.inputs = ["config/mypy.ini", "src"]
type-check.description = "Run mypy type check."

qc.depends-on = ["ruff-format", "ruff-check", "type-check"]
qc.description = "Quality check: ruff & mypy"

#################################### RELEASE & BUILD ###############################################


[feature.build.dependencies]
python-semantic-release = ">=9.14"
hatch = ">=1.13"

[feature.build.tasks]
semver = 'echo "Next Version is: $(semantic-release version --print)"'


build = { cmd = [
  "hatch",
  "build",
  "--clean",
], inputs = [
  "src",
  "pyproject.toml",
], outputs = [
  "dist/*",
], description = "🛠️ Builds the packages" }
