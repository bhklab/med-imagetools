[project]
name = "med-imagetools"
version = "1.18.0"
description = "Med-Imagetools: Transparent and Reproducible Medical Image Processing Pipelines in Python"
authors = [
  { name = "Sejin Kim" },
  { name = "Michal Kazmierski" },
  { name = "Kevin Qu" },
  { name = "Vishwesh Ramanathan" },
  { name = "Jermiah Joseph" },
  { name = "Benjamin Haibe-Kains", email = "benjamin.haibe.kains@utoronto.ca" },
]
maintainers = [
  { name = "Benjamin Haibe-Kains", email = "benjamin.haibe.kains@utoronto.ca" },
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10,<4"

# Standard dependencies
dependencies = [
  "h5py>=3.11.0,<4",
  "joblib>=1.4.2,<2",
  "numpy<3",
  "matplotlib>=3.8.4,<4",
  "pandas<3",
  "pydicom>=2.4.4",
  "pynrrd>=1.0.0,<2",
  "scikit-image>=0.23.2,<1",
  "scikit-learn>=1.4.2,<2",
  "simpleitk>=2.3.1,<3",
  "tqdm>=4.66.4,<5",
  "fasteners==0.19",
  "pyyaml>=6.0.1,<7",
  "dill>=0.3.8,<1",
  "attrs>=23.2.0",
  "structlog>=24.0,<25",
  "click>=8.1,<9",
  "rich>=13.9.4",
  "sqlitedict>=2.0",
  "sqlalchemy>=2.0.0",
]

classifiers = [
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]


# Optional dependencies (extras)
[project.optional-dependencies]
torch = ["torch", "torchio"]
debug = ["pyvis"]
test = [
  "pygithub>=2.5.0",
  "aiohttp>=3.8.1",
]
all = [
  "pygithub>=2.5.0",
  "aiohttp>=3.8.1",
  # add these back later
  # "torch",
  # "torchio",
  # "pyvis",
]

# Entry points for CLI commands
[project.scripts]
autopipeline = "imgtools.autopipeline:main"
imgtools = "imgtools.cli.__main__:cli"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[tool.hatch.build]
directory = "dist"

[tool.hatch.build.targets.wheel]
# Automatically discovers packages in `src/`
packages = ["src/imgtools"]
include = [
    "pyproject.toml",
    "README.md",
    "src/imgtools/py.typed",
    "src/**"
]

[tool.semantic_release]
version_variables = ["src/imgtools/__init__.py:__version__"]
version_toml = ["pyproject.toml:project.version"]
upload_to_release = true
remove_dist = false
commit_message = "chore(sem-ver): {version}"
patch_without_tag = true

[tool.semantic_release.branches.main]
match = "(main|master)"

[tool.semantic_release.branches.dev]
# any branch that contains "dev" will be considered a dev branch
match = ".*dev.*"
prerelease = true
prerelease_token = "rc"

[tool.ruff]
# Extend the `pyproject.toml` file in the parent directory...
extend = "config/ruff.toml"